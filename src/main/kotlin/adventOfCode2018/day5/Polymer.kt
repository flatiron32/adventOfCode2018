/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package adventOfCode2018.day5

import java.io.File

fun main(args: Array<String>) {
    val fileName = "src/main/resources/polymer.txt"
    File(fileName).inputStream().bufferedReader().useLines { lines ->
        lines.forEach { it ->
            var length = react(it)
            println("Initial shortest $length")

            var shortestLength = Int.MAX_VALUE
            var shortestChar = '\u0000'
            for (c in 'a'..'z') {
                var length = react(it.filter { char -> char.toLowerCase() != c })
                if (length < shortestLength) {
                    shortestLength = length
                    shortestChar = c
                }
            }
            println("$shortestChar -> $shortestLength")
        }
    }
}

private fun react(initialLine: String): Int {
    var line = initialLine
    var length = Int.MAX_VALUE
    while (length > line.length) {
        length = line.length
        println(length)
        line = line.fold("") { acc, c ->
            if (acc.isEmpty()) {
                acc + c
            } else {
                val prevChar = acc.last()
                if ((c.isUpperCase() && prevChar == c.toLowerCase()) ||
                        c.isLowerCase() && prevChar == c.toUpperCase()) {
                    acc.removeSuffix(prevChar.toString())
                } else {
                    acc + c
                }

            }
        }
    }
    return length
}
